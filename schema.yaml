openapi: 3.0.3
x-stoplight:
  id: tojvedp8y519x
info:
  title: ''
  version: 0.0.0
paths:
  /api/recipe/recipes/:
    get:
      operationId: recipe_recipes_list
      description: Model View Set is set to work directly with the model
      tags:
        - recipe
      security:
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recipe'
          description: ''
    post:
      operationId: recipe_recipes_create
      description: Model View Set is set to work directly with the model
      tags:
        - recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
        required: true
      security:
        - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDetail'
          description: ''
  '/api/recipe/recipes/{id}/':
    get:
      operationId: recipe_recipes_retrieve
      description: Model View Set is set to work directly with the model
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this recipe.
          required: true
      tags:
        - recipe
      security:
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDetail'
          description: ''
    put:
      operationId: recipe_recipes_update
      description: Model View Set is set to work directly with the model
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this recipe.
          required: true
      tags:
        - recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecipeDetail'
        required: true
      security:
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDetail'
          description: ''
    patch:
      operationId: recipe_recipes_partial_update
      description: Model View Set is set to work directly with the model
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this recipe.
          required: true
      tags:
        - recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRecipeDetail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRecipeDetail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRecipeDetail'
      security:
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipeDetail'
          description: ''
    delete:
      operationId: recipe_recipes_destroy
      description: Model View Set is set to work directly with the model
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this recipe.
          required: true
      tags:
        - recipe
      security:
        - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/recipe/tags/:
    get:
      operationId: recipe_tags_list
      description: |-
        Generic view set is a generic view set so that we can define the actions that we want or need.
        Manage tags in the database. nn
      tags:
        - recipe
      security:
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
  '/api/recipe/tags/{id}/':
    put:
      operationId: recipe_tags_update
      description: |-
        Generic view set is a generic view set so that we can define the actions that we want or need.
        Manage tags in the database.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this tag.
          required: true
      tags:
        - recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: recipe_tags_partial_update
      description: |-
        Generic view set is a generic view set so that we can define the actions that we want or need.
        Manage tags in the database.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this tag.
          required: true
      tags:
        - recipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: recipe_tags_destroy
      description: |-
        Generic view set is a generic view set so that we can define the actions that we want or need.
        Manage tags in the database.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this tag.
          required: true
      tags:
        - recipe
      security:
        - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - json
              - yaml
        - in: query
          name: lang
          schema:
            type: string
            enum:
              - af
              - ar
              - ar-dz
              - ast
              - az
              - be
              - bg
              - bn
              - br
              - bs
              - ca
              - cs
              - cy
              - da
              - de
              - dsb
              - el
              - en
              - en-au
              - en-gb
              - eo
              - es
              - es-ar
              - es-co
              - es-mx
              - es-ni
              - es-ve
              - et
              - eu
              - fa
              - fi
              - fr
              - fy
              - ga
              - gd
              - gl
              - he
              - hi
              - hr
              - hsb
              - hu
              - hy
              - ia
              - id
              - ig
              - io
              - is
              - it
              - ja
              - ka
              - kab
              - kk
              - km
              - kn
              - ko
              - ky
              - lb
              - lt
              - lv
              - mk
              - ml
              - mn
              - mr
              - ms
              - my
              - nb
              - ne
              - nl
              - nn
              - os
              - pa
              - pl
              - pt
              - pt-br
              - ro
              - ru
              - sk
              - sl
              - sq
              - sr
              - sr-latn
              - sv
              - sw
              - ta
              - te
              - tg
              - th
              - tk
              - tr
              - tt
              - udm
              - uk
              - ur
              - uz
              - vi
              - zh-hans
              - zh-hant
      tags:
        - schema
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/user/create/:
    post:
      operationId: user_create_create
      description: Create a new user in the system
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
        - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/me/:
    get:
      operationId: user_me_retrieve
      description: Manage the authenticated user
      tags:
        - user
      security:
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: user_me_update
      description: Manage the authenticated user
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: user_me_partial_update
      description: Manage the authenticated user
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
        - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/user/token/:
    post:
      operationId: user_token_create
      description: Create a new auth token for user
      tags:
        - user
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
        - cookieAuth: []
        - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      description: Serializer for the user Auth token
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - email
        - password
      x-stoplight:
        id: 4q097ozkitvj2
    PatchedRecipeDetail:
      type: object
      description: Serializer for recipe detail view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        time_minutes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: string
          format: decimal
          pattern: '^-?\d{0,3}(?:\.\d{0,2})?$'
        link:
          type: string
          maxLength: 255
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        description:
          type: string
      x-stoplight:
        id: im4dnhmlvzi05
    PatchedTag:
      type: object
      description: Serializer for tags
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      x-stoplight:
        id: og591g4zp6zru
    PatchedUser:
      type: object
      description: Serializer for the user object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 5
        name:
          type: string
          maxLength: 255
      x-stoplight:
        id: fqfdvn7cohyrz
    Recipe:
      type: object
      description: Serializer for recipes
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        time_minutes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: string
          format: decimal
          pattern: '^-?\d{0,3}(?:\.\d{0,2})?$'
        link:
          type: string
          maxLength: 255
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      required:
        - id
        - price
        - time_minutes
        - title
      x-stoplight:
        id: g7hk5e3cbmpx2
    RecipeDetail:
      type: object
      description: Serializer for recipe detail view
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        time_minutes:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        price:
          type: string
          format: decimal
          pattern: '^-?\d{0,3}(?:\.\d{0,2})?$'
        link:
          type: string
          maxLength: 255
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        description:
          type: string
      required:
        - id
        - price
        - time_minutes
        - title
      x-stoplight:
        id: zdq95c56ejqyt
    Tag:
      type: object
      description: Serializer for tags
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
        - id
        - name
      x-stoplight:
        id: tgaq7n243fo9x
    User:
      type: object
      description: Serializer for the user object
      properties:
        email:
          type: string
          format: email
          maxLength: 255
        password:
          type: string
          writeOnly: true
          maxLength: 128
          minLength: 5
        name:
          type: string
          maxLength: 255
      required:
        - email
        - name
        - password
      x-stoplight:
        id: puwrzctgo2odx
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
